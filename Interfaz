import tkinter as tk
from tkinter import messagebox as mb

#problema: timer no lo haremos, mi¿incremento de goles, para todo a tkinter
#falta mostrar que pasa cuando pones uina falta y que sancion se aplica
#falta mostrar los resultados finales cuando se oprime el boton finalizar partido
#falta mostrar el marcador parcial cuando se pone un gol
#falta hacer el diseño de la interfaz
#falta guardar los datos en un archivo
#comentar todo el codigo

class Marcador():
    def __init__(self,goles_local,goles_visitante):
        self.root = tk.Tk(className='Marcador parcial')
        self.root.geometry('200x200')
        self.labelA = tk.Label(self.root, text="Marcador parcial:")
        self.labelB=tk.Label(self.root,text="Local")
        self.labelC=tk.Label(self.root,text=goles_local)
        self.labelD=tk.Label(self.root,text="Visitante")
        self.labelE=tk.Label(self.root,text=goles_visitante)
        self.button1 = tk.Button(self.root,
                           text = 'Siguiente',
                           command=lambda:[self.root.destroy(),#gol_visitante(),gol_local()
                                           ])
           
        self.labelA.pack()
        self.labelB.pack()
        self.labelC.pack()
        self.labelD.pack()
        self.labelE.pack()
        self.button1.pack()

        self.root.mainloop()
       
        """
        def gol_local(goles_local):
                goles_local=Goles()#haciendo instancia de la otra clase y obteniendo el metodo de esta para ir sumandole
                goles_local.gol_local()
                return goles_local
       
        def gol_visitante(goles_visitante): #goles_local y goles_visitante reciben valores Booleanos(True or False)
                goles_visitante+=1
       """
 



class Goles():
    def __init__(self):
        self.root = tk.Tk(className='Gol')
        self.root.geometry('200x100')
        self.labelA = tk.Label(self.root, text="¿Que equipo anoto?")
       
        self.goles_local=0
        self.goles_visitante=0

       
        self.button1 = tk.Button(self.root,
                           text = 'Local',
                           command=lambda:[self.root.destroy(),self.gol_local()
                                           ])
        self.button2 = tk.Button(self.root,
                           text = 'Visitante',
                           command=lambda:[self.root.destroy(),self.gol_visitante()
                                           ])

        self.labelA.pack()
        self.button1.pack()
        self.button2.pack()

        self.root.mainloop()
       
    def gol_local(self): #goles_local y goles_visitante reciben valores Booleanos(True or False)
            self.goles_local+=1
            marcador=Marcador(self.goles_local,self.goles_visitante)
            marcador.gol_local()
            return marcador, self.goles_local
        #instanciar la otra clase donde esta el otro metodo que necesito mostrar en la ventana
    

  
    def gol_visitante(self): #goles_local y goles_visitante reciben valores Booleanos(True or False)
            self.goles_visitante+=1
            marcador=Marcador(self.goles_local,self.goles_visitante)
            return marcador

       
    def marcador_parcial(self, gol_local,gol_visitante,text):
        actualText = self.display.get()
        textLength = len(actualText)
        if actualText == "0":
            self.replaceText(text)
        else:
            self.display.insert(textLength, text)

       
                 
       
   

class Faltas:#ventana donde se ingresan las faltas
    def __init__(self):
        self.root = tk.Tk(className='Falta')#titulo de la ventana
        self.root.geometry('300x300')#tamaño de la ventana
        self.labelA = tk.Label(self.root, text="1.Ingresar el numero del jersey del jugador")#mensaje de texto para ingresar el numero del jugador
        self.labelB = tk.Label(self.root, text="2.Ingrese el nombre de la falta")#mensaje de texto para ingresar el nombre de la falta
        
        self.entry_1 = tk.StringVar(self.root)#declara el tipo de dato que se va a ingresar en entry_widget1
        self.entry_2 = tk.StringVar(self.root)#declara el tipo de dato que se va a ingresar en entry_widget2
        self.entry_widget_1 = tk.Entry(self.root, textvariable=self.entry_1)#crea la caja de texto para ingresar el numero del jersey
        self.entry_widget_2 = tk.Entry(self.root, textvariable=self.entry_2)#crea la caja de texto para ingresar el nombre de la falta
      
        self.button1 = tk.Button(self.root,
                           text = 'Listo',
                           command=lambda:[self.decision(self.entry_1.get(), self.entry_2.get()),self.root.destroy()  # funciones
                                           ])#boton que servira para mostrar que se hara con el jugador que hizo
                                            #la falta, con la funcion decision que recibe como parametros lo
                                            #que se entro en las cajas de texto

        self.labelA.pack()#se muestra el mensaje de textoA
        self.entry_widget_1.pack()#se muestra la caja de texto1
        self.labelB.pack()#se muestra el mensaje de textoB
        self.entry_widget_2.pack()#se muestra el mensaje de textoB
        self.button1.pack()#muestra el boton 

        self.root.mainloop()#permite cerrar la ventana
       
    def decision(self, numero_jugador, nombre_falta):#recibe como parametros los elementos escritos en el entry_widget1 y entry_widget2
        falta_menor=["intento ataque", "broken stick", "charging", "boarding", "cross checking", "delaying", "elbowing", " falling on the puck","handpass", "high sticks", "holding", "hoocking","interference","slashing","tripping" ]
        falta_mayor=["fighting","interference by spectators", "checking from behind", 'leaving penalty bench', "abuse of officials", "profane language", ]
        if nombre_falta in falta_menor:#si la falta escrita esta en falta menor 
            mb.showerror("Penalizacion","El jugador penalizado debe permanecer durante 2 minutos en el penalty box")#muestra un mensaje que diga que se debe hacer con el jugador
        elif nombre_falta in falta_mayor:#si la falta escrita esta en falta menor 
            mb.showerror("Penalizacion","El jugador penalizado debe permanecer durante 10 minutos en el penalty box")#muestra un mensaje que diga que se debe hacer con el jugador
        elif nombre_falta not in falta_menor or nombre_falta not in falta_mayor:
            mb.showerror("Penalizacion","la falta no existe o esta escrita de forma incorrecta")

        

    def misconduct(self):
        
    
    
    




class Mensaje2():
    def __init__(self):
        self.root = tk.Tk(className='¿Que desea hacer?')
        self.root.geometry('500x400')
        self.labelA = tk.Label(self.root, text="1.Ingresar una falta")
        self.labelB = tk.Label(self.root, text="2.Ingresar una anotacion")
        self.labelC = tk.Label(self.root, text="3.Finalizar el partido")
       
       
        self.button1 = tk.Button(self.root,
                           text = 'Oprima aqui.',
                           command=lambda:[self.falta()#funciones
                                           ])
        self.button2 = tk.Button(self.root,
                           text = 'Oprima aqui.',
                           command=lambda:[self.gol()#funciones
                                           ])
        self.button3 = tk.Button(self.root,
                           text = 'Oprima aqui.',
                           command=lambda:[self.finalizar()#funciones
                                           ])
       

        self.labelA.pack()
        self.button1.pack()
        self.labelB.pack()
        self.button2.pack()
        self.labelC.pack()
        self.button3.pack()

        self.root.mainloop()
       
    def falta(self):
        menu_falta=Faltas()
        return menu_falta
    def gol(self):
        menu_gol=Goles()
        return menu_gol
   
   # def finalizar(self):
       # self.root.destroy()
       

   

class Mensaje1():
   def __init__(self):
       self.root = tk.Tk(className='Orden del juego')
       self.root.geometry('400x300')

       self.labelA = tk.Label(self.root, text="Ingrese el nombre del equipo local:")
       self.labelB = tk.Label(self.root, text="Ingrese el nombre del equipo visitante:")
       self.labelC = tk.Label(self.root, text="Ingrese la hora de inicio:")
       
       
       self.button = tk.Button(self.root,
                          text = 'Siguiente',
                          command=lambda:[self.nombres, self.cambio()])
       
       self.entry_1 = tk.StringVar()
       self.entry_2 = tk.StringVar()
       self.entry_3 = tk.StringVar()
       self.entry_widget_1 = tk.Entry(self.root, textvariable=self.entry_1)
       self.entry_widget_2 = tk.Entry(self.root, textvariable=self.entry_2)
       self.entry_widget_3 = tk.Entry(self.root, textvariable=self.entry_3)

       self.labelA.pack()
       self.entry_widget_1.pack()
       self.labelB.pack()
       self.entry_widget_2.pack()
       self.labelC.pack()
       self.entry_widget_3.pack()
       self.button.pack()

       self.root.mainloop()

   def nombres(self):
       local=self.entry_1.get()
       visitante=self.entry_1.get() #asigna lo que escribe en la entrada a una variable  
       return local,visitante


   
   def cambio(self):
       #hacer el timer
       self.root.destroy()#cierra la ventana actual
       menu=Mensaje2() #crea otra ventana
       return menu
       
       
   
       
app = Mensaje1()
